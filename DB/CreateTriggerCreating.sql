CREATE OR REPLACE TRIGGER MY_TRIGGER_C
BEFORE INSERT ON "CATALOG"
FOR EACH ROW
DECLARE
    ID INTEGER;
    TEMP INTEGER;
BEGIN
  IF :NEW.ID_CATALOG IS NULL THEN
   LOOP
      SELECT dbms_random.random INTO id FROM dual;
      SELECT COUNT(1) INTO TEMP FROM "CATALOG" WHERE ID_CATALOG = id;
      EXIT WHEN (TEMP=0);
    END LOOP;
    :NEW.ID_CATALOG := id;    
  END IF;
END;
/

CREATE OR REPLACE TRIGGER MY_TRIGGER_U
BEFORE INSERT ON "USER"
FOR EACH ROW
DECLARE
    ID INTEGER;
    TEMP INTEGER;
BEGIN
  IF :NEW.ID_USER IS NULL THEN
   LOOP
      SELECT dbms_random.random INTO id FROM dual;
      SELECT COUNT(1) INTO TEMP FROM "USER" WHERE ID_USER = id;
      EXIT WHEN (TEMP=0);
    END LOOP;
    :NEW.ID_USER := id;    
  END IF;
END;
/

CREATE OR REPLACE TRIGGER MY_TRIGGER_R
BEFORE INSERT ON "ROLE"
FOR EACH ROW
DECLARE
    ID INTEGER;
    TEMP INTEGER;
BEGIN
  IF :NEW.ID_ROLE IS NULL THEN
   LOOP
      SELECT dbms_random.random INTO id FROM dual;
      SELECT COUNT(1) INTO TEMP FROM "ROLE" WHERE ID_ROLE = id;
      EXIT WHEN (TEMP=0);
    END LOOP;
    :NEW.ID_ROLE := id;    
  END IF;
END;
/

CREATE OR REPLACE TRIGGER MY_TRIGGER_P
BEFORE INSERT ON "PRODUCT"
FOR EACH ROW
DECLARE
    ID INTEGER;
    TEMP INTEGER;
BEGIN
  IF :NEW.ID_PRODUCT IS NULL THEN
   LOOP
      SELECT dbms_random.random INTO id FROM dual;
      SELECT COUNT(1) INTO TEMP FROM "PRODUCT" WHERE ID_PRODUCT = id;
      EXIT WHEN (TEMP=0);
    END LOOP;
    :NEW.ID_PRODUCT := id;    
  END IF;
END;
/

CREATE OR REPLACE TRIGGER MY_TRIGGER_O
BEFORE INSERT ON "OPINION"
FOR EACH ROW
DECLARE
    ID INTEGER;
    TEMP INTEGER;
BEGIN
  IF :NEW.ID_OPINION IS NULL THEN
   LOOP
      SELECT dbms_random.random INTO id FROM dual;
      SELECT COUNT(1) INTO TEMP FROM "OPINION" WHERE ID_OPINION = id;
      EXIT WHEN (TEMP=0);
    END LOOP;
    :NEW.ID_OPINION := id;    
  END IF;
END;
/

CREATE OR REPLACE TRIGGER MY_TRIGGER_ORD
BEFORE INSERT ON "ORDER"
FOR EACH ROW
DECLARE
    ID INTEGER;
    TEMP INTEGER;
BEGIN
  IF :NEW.ID_ORDER IS NULL THEN
   LOOP
      SELECT dbms_random.random INTO id FROM dual;
      SELECT COUNT(1) INTO TEMP FROM "ORDER" WHERE ID_ORDER = id;
      EXIT WHEN (TEMP=0);
    END LOOP;
    :NEW.ID_ORDER := id;    
  END IF;
END;
/

CREATE OR REPLACE TRIGGER MY_TRIGGER_I
BEFORE INSERT ON "IMAGE"
FOR EACH ROW
DECLARE
    ID INTEGER;
    TEMP INTEGER;
BEGIN
  IF :NEW.ID_IMG IS NULL THEN
   LOOP
      SELECT dbms_random.random INTO id FROM dual;
      SELECT COUNT(1) INTO TEMP FROM "IMAGE" WHERE ID_IMG = id;
      EXIT WHEN (TEMP=0);
    END LOOP;
    :NEW.ID_IMG := id;    
  END IF;
END;
/

